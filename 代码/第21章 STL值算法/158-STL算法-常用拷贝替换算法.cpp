#include <iostream>#include <vector>#include <algorithm>using namespace std;void test12(){    vector<int> v1;    v1.push_back(10);    v1.push_back(20);    v1.push_back(30);    v1.push_back(40);    v1.push_back(50);    vector<int>v2;    v2.resize(v1.size());    copy(v1.begin(), v1.end(), v2.begin());    printVectorInt(v2);}#include<iterator>void test13(){    vector<int> v1;    v1.push_back(10);    v1.push_back(20);    v1.push_back(30);    v1.push_back(40);    v1.push_back(50);    copy(v1.begin(), v1.end(), ostream_iterator<int>(cout, " ") );    cout<<endl;}class GreaterThan30{public:    bool operator()(int val)    {        return val>30;    }};void test14(){    vector<int> v1;    v1.push_back(10);    v1.push_back(20);    v1.push_back(30);    v1.push_back(40);    v1.push_back(50);    //replace(v1.begin(), v1.end(), 30, 3000);    replace_if(v1.begin(), v1.end(), GreaterThan30(), 2000 );    copy(v1.begin(), v1.end(), ostream_iterator<int>(cout, " ") );    cout<<endl;}void test15(){    vector<int> v1;    v1.push_back(10);    v1.push_back(20);    v1.push_back(30);    v1.push_back(40);    v1.push_back(50);    vector<int> v2;    v2.push_back(1000);    v2.push_back(2000);    v2.push_back(3000);    swap(v1, v2);    copy(v1.begin(), v1.end(), ostream_iterator<int>(cout, " ") );    cout<<endl;    copy(v2.begin(), v2.end(), ostream_iterator<int>(cout, " ") );    cout<<endl;}int main(){	test12();	return 0;}